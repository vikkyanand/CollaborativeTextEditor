name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/collaborative_backend:latest ./CollaborativeTextEditor_backend
          docker push ${{ secrets.DOCKER_USERNAME }}/collaborative_backend:latest

      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/collaborative_frontend:latest ./CollaborativeTextEditor_frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/collaborative_frontend:latest

      - name: Deploy to Docker Compose
        run: |
          docker-compose -f docker-compose.yml -p collaborativetexteditor1 up -d
